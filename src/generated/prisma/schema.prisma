// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  clerkId   String   @unique
  email     String   @unique
  name      String?
  avatarUrl String?
  isAdmin   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  events    Event[]
}

model College {
  id        String   @id @default(cuid())
  name      String
  website   String?
  location  String?
  logoUrl   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  events    Event[]
}

model Event {
  id          String     @id @default(cuid())
  title       String
  description String
  startTime   DateTime
  endTime     DateTime?
  location    String
  websiteUrl  String?
  organizer   String?
  college     College?   @relation(fields: [collegeId], references: [id])
  collegeId   String?
  user        User?      @relation(fields: [userId], references: [id])
  userId      String?
  status      String     @default("pending") // pending/approved/rejected
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  isOnline    Boolean    @default(false)
  onlineUrl   String?
  categories  Category[]
  tags        Tag[]
}

model Category {
  id     String  @id @default(cuid())
  name   String  @unique
  events Event[]
}

model Tag {
  id     String  @id @default(cuid())
  name   String  @unique
  events Event[]
}
